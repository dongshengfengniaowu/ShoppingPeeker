首先-第一期，先做一个全网商品比价的搜索页面？ 价格不一定要最低 ，但是多方位的对比

Xamarin.forms 官方例子
https://github.com/xamarin
https://developer.xamarin.com/samples/xamarin-forms/all/
https://github.com/xamarin/xamarin-forms-samples

Xamarin
一览资源相关-旧
http://wilsonmar.github.io/xamarin/
云测试
https://appcenter.ms/settings/billing
https://docs.microsoft.com/zh-cn/appcenter/


设备分类
https://docs.microsoft.com/zh-cn/xamarin/xamarin-forms/platform/device

组件市场
https://components.xamarin.com/


性能比较测试
https://github.com/xamarin/benchmarker

在线学习
https://university.xamarin.com/profile
简书
https://www.jianshu.com/p/cae9078c3ecf

Xamarin Android 设备管理器
https://docs.microsoft.com/zh-cn/xamarin/android/get-started/installation/android-emulator/xamarin-device-manager?tabs=vswin


Intel 硬件加速支持
https://software.intel.com/en-us/articles/intel-hardware-accelerated-execution-manager-intel-haxm

Xamarin.Forms 的 Xamarin 实时 Player
https://docs.microsoft.com/zh-cn/xamarin/tools/live-player/
有一些限制可以运行实时的 Xamarin Player，包括以下各项的事情上：
Xamarin.Forms
不支持自定义呈现器。
不支持效果。
不支持使用自定义可绑定属性的自定义控件。
不支持嵌入的资源 (即。 在 PCL 中嵌入图像或其他资源)。
第三方 MVVM 框架不支持 (ie。Prism、 Mvvm 跨、 Mvvm Light，等等。）。
不支持在 iOS 上的资产目录。

Xamarin.Forms 最新版本发布说明
https://developer.xamarin.com/releases/xamarin-forms/xamarin-forms-3.0/3.0.0-pre3/


简单例子：
https://msdn.microsoft.com/en-us/library/mt679501.aspx
MSDN例子：借助 Xamarin.Forms 跨移动平台共享 UI 代码
https://msdn.microsoft.com/magazine/dn904669.aspx
https://msdn.microsoft.com/en-us/library/dn879698.aspx

安卓api 版本
https://docs.microsoft.com/zh-cn/xamarin/android/app-fundamentals/android-api-levels?tabs=vswin
https://docs.microsoft.com/zh-cn/xamarin/android/app-fundamentals/android-api-levels?tabs=vswin#runtimechecks

Android 仿真器硬件加速
https://docs.microsoft.com/zh-cn/xamarin/android/get-started/installation/android-emulator/hardware-acceleration?tabs=vswin
因为如果不进行硬件加速，Android SDK 仿真器的运行速度会过于缓慢，所以推荐使用 Intel 的 HAXM（硬件加速执行管理器）大幅提升 Android SDK 仿真器的性能。

ViewModel设计
public class PersonViewModel : INotifyPropertyChanged
{
    string name;
    double age;
    string skills;

    public event PropertyChangedEventHandler PropertyChanged;

    public string Name
    {
        set { SetProperty(ref name, value); }
        get { return name; }
    }

    public double Age
    {
        set { SetProperty(ref age, value); }
        get { return age; }
    }

    public string Skills
    {
        set { SetProperty(ref skills, value); }
        get { return skills; }
    }

    public override string ToString()
    {
        return Name + ", age " + Age;
    }

    bool SetProperty<T>(ref T storage, T value, [CallerMemberName] string propertyName = null)
    {
        if (Object.Equals(storage, value))
            return false;

        storage = value;
        OnPropertyChanged(propertyName);
        return true;
    }

    protected void OnPropertyChanged([CallerMemberName] string propertyName = null)
    {
        PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
    }
}


#if __IOS__
        var wrapper = (Xamarin.Forms.Platform.iOS.NativeViewWrapper)contentViewButtonParent.Content;
        var button = (UIKit.UIButton)wrapper.NativeView;
        button.SetTitle("Scale and Rotate Text", UIKit.UIControlState.Normal);
        button.SetTitleColor(UIKit.UIColor.Black, UIKit.UIControlState.Normal);
#endif
#if __ANDROID__
        var wrapper = (Xamarin.Forms.Platform.Android.NativeViewWrapper)contentViewTextParent.Content;
        var textView = (Android.Widget.TextView)wrapper.NativeView;
        textView.SetTextColor(Android.Graphics.Color.Red);
#endif


Google Play上获取apk。在google paly上安装应用后，点击分享，可以把该apk分享给别人，简单方便。
4.直接去apkpure上下载，地址：https://apkpure.com/cn/

添加环境变量 JAVA_HOME：
    C:\Program Files (x86)\Java\jdk1.8.0_172
    添加环境变量 CLASSPATH：
    %JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar
    修改环境变量 Path，在最前面加入以下值：
    %JAVA_HOME%\bin;%JAVA_HOME%\jre\bin;
	
设置Android SDK环境变量
    1) 新建环境变量
    （步骤：在计算机的桌面上右击“我的电脑”，点击“属性”-“高级”-“环境变量”）

    变量名：ANDROID_SDK_HOME
    变量值：C:\Program Files (x86)\Android\android-sdk   （SDK安装目录）

    变量名：Path
    变量值：  ;%ANDROID_SDK_HOME%\tools;%ANDROID_SDK_HOME%\platform-tools  （注意前面的分号）

	
	变量名： ANDROID_NDK_PATH
    变量值：C:\Program Files (x86)\Android\android-sdk\ndk-bundle
	
xamarin-forms 扩展标记

x:Static – 引用静态属性、 字段或枚举成员。
x:Reference – 名为页面上的元素的引用。
x:Type – 将属性设置为System.Type对象。
x:Array – 构造特定类型的对象的数组。
x:Null – 将属性设置为null值。

ResourceDictionary 是 Xamarin.Forms 应用程序使用的资源的存储库。 存储中的典型资源ResourceDictionary包括样式，控件模板，数据模板，颜色、 和转换器。


开源的 Xamrin.Forms 组件
https://github.com/xamarin/XamarinComponents


API 27 (Android 8.1) – _Oreo_自 2017 年 12 月发布。 生成版本的代码 Android.OS.BuildVersionCodes.OMr1
API 26 (Android 8.0) – _Oreo_自 2017 年 8 月发布。 生成版本的代码 Android.OS.BuildVersionCodes.O
API 25 (Android 7.1) – _Nougat_2016 年 12 月发布。 生成版本的代码 Android.OS.BuildVersionCodes.NMr1
API 24 (Android 7.0) – _Nougat_2016 年 8 月发布。 生成版本的代码 Android.OS.BuildVersionCodes.N
API 23 (Android 6.0) – _Marshmallow_2015 年 8 月发布。 生成版本的代码 Android.OS.BuildVersionCodes.M
API 22 (Android 5.1) – _棒糖形_2015 年 3 月发布。 生成版本的代码 Android.OS.BuildVersionCodes.LollipopMr1
API 21 (Android 5.0) – _棒糖形_2014 年 11 月发布。 生成版本的代码 Android.OS.BuildVersionCodes.Lollipop
API 20 (Android 4.4W) – _Kitkat 监视_2014 年 6 月发布。 生成版本的代码 Android.OS.BuildVersionCodes.KitKatWatch
API 19 (Android 4.4) – _Kitkat_2013 年 10 月发布。 生成版本的代码 Android.OS.BuildVersionCodes.KitKat
API 18 (Android 4.3) – _果冻 Bean_2013 年 7 月发布。 生成版本的代码 Android.OS.BuildVersionCodes.JellyBeanMr2
API 17 (Android 4.2-4.2.2) – _果冻 Bean_2012 年 11 月发布。 生成版本的代码 Android.OS.BuildVersionCodes.JellyBeanMr1
API 16 (Android 4.1-4.1.1) – _果冻 Bean_2012 年 6 月发布。 生成版本的代码 Android.OS.BuildVersionCodes.JellyBean
API 15 (Android 4.0.3-4.0.4) – _冰激凌德桑威奇_2011 年 12 月发布。 生成版本的代码 Android.OS.BuildVersionCodes.IceCreamSandwichMr1
API 14 (Android 4.0 4.0.2) – _冰激凌德桑威奇_2011 年 10 月发布。 生成版本的代码 Android.OS.BuildVersionCodes.IceCreamSandwich
API 13 (Android 3.2) – _Honeycomb_2011 年 6 月发布。 生成版本的代码 Android.OS.BuildVersionCodes.HoneyCombMr2
API 12 (Android 3.1.x) – _Honeycomb_2011 年 5 月发布。 生成版本的代码 Android.OS.BuildVersionCodes.HoneyCombMr1
API 11 (Android 3.0.x) – _Honeycomb_2011 年 2 月发布。 生成版本的代码 Android.OS.BuildVersionCodes.HoneyComb
API 10 (Android 2.3.3-2.3.4) – _小玩偶_2011 年 2 月发布。 生成版本的代码 Android.OS.BuildVersionCodes.GingerBreadMr1
API 9 (Android 2.3-2.3.2) – _小玩偶_2010 年 11 月发布。 生成版本的代码 Android.OS.BuildVersionCodes.GingerBread
API 8 (Android 2.2.x) – _Froyo_2010 年 6 月发布。 生成版本的代码 Android.OS.BuildVersionCodes.Froyo
API 7 (Android 2.1.x) – _Eclair_2010 年 1 月发布。 生成版本的代码 Android.OS.BuildVersionCodes.EclairMr1
API 6 (Android 2.0.1) – _Eclair_2009 年 12 月发布。 生成版本的代码 Android.OS.BuildVersionCodes.Eclair01
API 5 (Android 2.0) – _Eclair_2009 年 11 月发布。 生成版本的代码 Android.OS.BuildVersionCodes.Eclair
API 4 (Android 1.6) – _圆环图_2009 年 9 月发布。 生成版本的代码 Android.OS.BuildVersionCodes.Donut
API 3 (Android 1.5) – _Cupcake_2009 年 5 月发布。 生成版本的代码 Android.OS.BuildVersionCodes.Cupcake
API 2 (Android 1.1) – _基_2009 年 2 月发布。 生成版本的代码 Android.OS.BuildVersionCodes.Base11
API 1 (Android 1.0) – _基_2008 年 10 月发布。 生成版本的代码 Android.OS.BuildVersionCodes.Base


	
https://www.visualstudio.com/zh-hans/vs/msft-android-emulator/


 public class DataService  
    {  
        public static async Task<dynamic> getDataFromService(string queryString)  
        {  
            HttpClient client = new HttpClient();  
            var response = await client.GetAsync(queryString);  

            dynamic data = null;  
            if (response != null)  
            {  
                string json = response.Content.ReadAsStringAsync().Result;  
                data = JsonConvert.DeserializeObject(json);  
            }  

            return data;  
        }  
    }  
	
	
	 public class Weather  
    {  
        public string Title { get; set; }  
        public string Temperature { get; set; }  
        public string Wind { get; set; }  
        public string Humidity { get; set; }  
        public string Visibility { get; set; }  
        public string Sunrise { get; set; }  
        public string Sunset { get; set; }  

        public Weather()  
        {  
            //Because labels bind to these values, set them to an empty string to  
            //ensure that the label appears on all platforms by default.  
            this.Title = " ";  
            this.Temperature = " ";  
            this.Wind = " ";  
            this.Humidity = " ";  
            this.Visibility = " ";  
            this.Sunrise = " ";  
            this.Sunset = " ";  
        }  
    }  
开始前端页面
1 关键词发送
2 获取json 
3 渲染品牌 分类 tag ，分组聚合处理
4 排序
5 列表
6 分页
7 优惠券

--------------完毕后--------
用户注册
收藏 关注 属性对比--汽车之家--属性维度的对比

价格曲线
评级信用

------------游戏娱乐--------
撒币...........

dnnode.com
开源地址：https://github.com/micro-chen/WebPrinter
关键词分布：http://tool.chinaz.com/keywordsarea/

47.95.252.246

nginx的配置文件在 /home/server-config/nginx/include  下的 。
print.hw801.com
刚才的那个地址。。 
账号是 wanghengzhi 
密码  Wanghengzhi123  xshell 登录。。

chenwenguang  密码是 Chenwenguang  
切成root的时候，也是 sudo su - 
配置文件都在 /home/server_config 中。。
其他的你自己玩就行 。。安装soft的时候，要用yum


 window.location.reload();//导入成功后 需要刷新页面

淘鹊桥
http://quan.meiquan8.com/
http://www.qingtaoke.com/
http://www.taokezhushou.com/


查询指定的关键词后，会得到查询页面
1 品牌
2 高级选项，我们对这些高级选项进行合并匹配，能匹配的，合并到一个组，不能合并的，成为单一的tag组
3 排序

Dapper 的示范：
https://www.codeproject.com/Articles/889668/SQL-Server-Dapper


天猫空白页
喵~没找到与“ 压瓦机设备 ”相关的 商品 哦，要不您换个关键词我帮您再找找看

<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>SecurityMatrix</title>
<link href="//g.alicdn.com/sd/user_sm/1.0.1/css/sm.css" rel="stylesheet" type="text/css">
</head>
<body><script>
with(document)with(body)with(insertBefore(createElement("script"),firstChild))setAttribute("exparams","category=&userid=&aplus&yunid=&asid=AQAAAACZfUtawsaZQwAAAACE8LebqR0qlg==",id="tb-beacon-aplus",src=(location>"https"?"//s":"//a")+".tbcdn.cn/s/aplus_v2.js")
</script>

    <table width="100%"  border="0" cellspacing="0" cellpadding="0">
        <tr>
            <td><div class="main">
    <table width="100%"  border="0" cellspacing="0" cellpadding="0">
        <tr>
            <td><img src="//g.alicdn.com/sd/user_sm/1.0.1/images/logo_sm.jpg"></td>
            <td>
                                <form name="queryForm" id="query" action="https://sec.taobao.com/query.htm" method="post">
                    <input type="hidden" name="action" value="QueryAction"/>
                    <input type="hidden" name="event_submit_do_query" value="ok">
                    <input type="hidden" name="smPolicy" value="tmallsearch-product-anti_Spider-html-checkcode"/>
                    <input type="hidden" name="smReturn" value="https://list.tmall.com/search_product.htm?spm=a220m.1000858.1000720.1.348abe64rj5JVg&amp;q=%E6%AF%9B%E8%A1%A3&amp;sort=s&amp;from=mallfp..pc_1_searchbutton&amp;type=pc&amp;style=g"/>
                    <input type="hidden" name="smApp" value="tmallsearch"/>
                    <input type="hidden" name="smCharset" value="GBK"/>
                    <input type="hidden" name="smTag" value="MTgwLjc4LjI0My4xOTcsNjk4NzYwNjEyLDAyMjJhNWRmNjkwYjQwOGNhNDc4NTFhZTM5OGFhMWYx"/>
                    <input type="hidden" name="smSign" value="bYPsuoiuEd9lLhmpnUuwfg=="/>
                    <input type="hidden" name="identity" value="sm-tmallsearch"/>
                    <input type="hidden" name="captcha" value=""/>
                                                                        <div class="view">
                                <p>发现您的网络环境有异常，为保证正常使用，请验证。</p>
                                <p>
                                    <img id="checkcodeImg" src="//pin.aliyun.com/get_img?sessionid=04778550aecf5d3aedcc528a276ad431&identity=sm-tmallsearch&type=number"/>
                                    <span>看不清？<a href="#" onclick="refresh();">换一张</a></span>
                                </p>
                                <p>
                                    <label for="checkcodeInput">验证码：</label>
                                    <input id="checkcodeInput" type="text" name="checkcode"/>
                                                                    </p>
                                <script type="text/javascript">
                                    <!--
                                    function refresh(){
                                    var img = document.getElementById("checkcodeImg");
                                    img.src = "//pin.aliyun.com/get_img?sessionid=04778550aecf5d3aedcc528a276ad431&identity=sm-tmallsearch&type=number&r=" + Math.random();
                                    }
                                	-->
                                </script>
							</div>
						                                                                        <script type="text/javascript">
                                <!--
                                var UA_Opt=new Object;
                                UA_Opt.FormId="query";
                                UA_Opt.MaxMCLog=6;
                                UA_Opt.MaxMPLog=3;
                                UA_Opt.MaxKSLog=3;
                                UA_Opt.Token=new Date().getTime()+":" + Math.random();
                                UA_Opt.SendMethod=1;
                                UA_Opt.Flag=12430;
                        		-->
                            </script>
                            <script type="text/javascript" src="//uaction.alicdn.com/js/ua.js"></script>
                                                                <div class="submit">
                        <input type="submit" value="确定"/>
                    </div>
				</form>
			</td>
		</tr>
	</table>
    <script src="https://core.cnzz.com/stats.js?s=29"></script>
</div>
</td>
        </tr>
        <tr>
            <td><div align="center">
                <p>
                    <strong>网上贸易 尽在阿里巴巴： 
      <a href="//www.alibaba.com">阿里巴巴国际站</a>
      <b>|</b>
      <a href="//www.1688.com">阿里巴巴中国站</a>
      <b>|</b>
      <a href="//www.taobao.com">淘宝网</a>
      <b>|</b>
      <a href="//www.tmall.com">天猫</a>
      <b>|</b>
      <a href="//ju.taobao.com">聚划算</a>
      <b>|</b>
      <a href="//www.etao.com">一淘</a>
      <b>|</b>
      <a href="//www.alimama.com">阿里妈妈</a>
      <b>|</b>
      <a href="//www.alipay.com">支付宝</a>
                    </strong>
                </p>
                <p>
                    Copyright &copy; 1999-2015 Alibaba.com Corporation and its licensors. All rights reserved.
                </p>
</div>
</td>
        </tr>
    </table>
</body>
</html>
		api_search_tmall_products: "api/servicebus/search_tmall_products",//天猫商品检索
        api_search_taobao_products: "api/servicebus/search_taobao_products",//淘宝商品检索
        api_search_jd_products: "api/servicebus/search_jd_products",//京东商品检索
        api_search_pdd_products: "api/servicebus/search_pdd_products",//拼多多商品检索
		api_search_guomei_products: "api/servicebus/search_guomei_products",//国美商品检索
        api_search_suning_products: "api/servicebus/search_suning_products",//苏宁商品检索
		api_search_dangdang_products: "api/servicebus/search_dangdang_products",//当当商品检索
		
		
		api_search_etao_products: "api/servicebus/search_etao_products",//一淘商品检索
        api_search_taoquan: "api/servicebus/search_taoquan",//淘宝天猫优惠券检索
		
        api_search_vip_products: "api/servicebus/search_vip_products",//唯品会商品检索--待定
        api_search_yhd_products: "api/servicebus/search_yhd_products",//一号店商品检索--待定
        api_search_mls_products: "api/servicebus/search_mls_products",//美丽说商品检索--不支持
        api_search_mgj_products: "api/servicebus/search_mgj_products",//蘑菇街商品检索
        api_search_zhe800_products: "api/servicebus/search_zhe800_products",//zhe800商品检索---废弃此平台
     
		
前端数据绑定框架：MVVM
angular.js
vue.js ---推荐
knockout.js
way.js

	
libcef
钉钉  桌面微信 饿了么商家版 有道字典桌面版 360浏览器 百度浏览器 金山浏览器


京东的当前页面的半页的起始位置：25 <!--footer end--><script>
seajs.use('product/search/1.0.7/js/main.js').config({alias:{'search_new':'./script/search_new.js?318.js'}}).use('search_new', function(s){
	s.init(1,200,"79万+","0",1,0,25,1,0,2);
});

</script>

SEARCH.page = function(F, C) {
        F = parseInt(F, 10);
        if (F < 1) {
            F = 1
        }
        C && e();
        var H, E = Math.min, B = this.enable_twice_loading ? 1 : 2, D = 30 * B, G = 4 * B, A = 2 * B;
        if (F == 1) {
            H = 1
        } else {
            if (F < this.current_page) {
                H = this.prev_start - (this.current_page - F) * D + E(this.advware_count, (this.current_page - 1) * G) - E(this.advware_count, (F - 1) * G) + E(this.promotion_count, (this.current_page - 1) * A) - E(this.promotion_count, (F - 1) * A)
            } else {
                if (F == this.current_page) {
                    H = this.prev_start
                } else {
                    H = this.next_start + (F - this.current_page - 1) * D - E(this.advware_count, (F - 1) * G) + E(this.advware_count, this.current_page * G) - E(this.promotion_count, (F - 1) * A) + E(this.promotion_count, this.current_page * A)
                }
            }
        }
        v(this.base_url + "&page=" + F + "&s=" + H + "&click=" + this.click);
        searchlog(1, F, 0, 56)
		
s\.init\((.*?)\);


SEARCH.init = function(H, J, G, D, I, B, E, C, F, A) {
        B && this.get_diviner_ware(),
        this.get_ware_info(),
        this.page_html(H, J, G, I, E, C, F, A),
        this.sort_html(D),
        this.bind_events.init(),
        this.sync_iframe_height(),
        k()
    }
	
***************

查询指定的关键词后，会得到查询页面
1 品牌
2 高级选项，我们对这些高级选项进行合并匹配，能匹配的，合并到一个组，不能合并的，成为单一的tag组
3 排序


***************
优惠券
商品过滤
1 关键词
2 关键词对应的品类，组合成热点候选词汇 品牌 分类  规格 颜色等 +排序筛选 作为搜索面板

3 品类组合成 空格分隔的关键词 进行筛选-----品类--集成淘宝 天猫 京东的关键词的品类，
4 添加到对比栏 手工对比---对比 功能，手工添加到对比栏，进行参数对比，比如汽车之家，对各个维度进行对比。
5 收藏？？？？？？
6 价格曲线
7 游戏博弈
8 评级


*****************
--------- 开始做前端页面-------------
1 根据关键词 搜索商品
1-1 各个平台上的商品检索
1-2 将获取到的商品列表进行解析，发送到客户端
1-3 查询淘宝 天猫的优惠券-列表
1-4 查询优惠券详细，鼠标移动到图标，查询券详情，将佣金值，显示为助推值，显示到客户端

2 下拉分页
3 横向添加关注的电商


 /* --基础字段---
         //商品ID
         //商品的链接基础地址--抽象属性
         //是否有优惠券
         //优惠券地址-----抽象属性
         //主图地址
         //商品标题
         //商品现价
         //交易成功数目
         //卖家店铺名称
         //付款或者交易笔数*/




1.隐藏券～从淘宝webh5接口查询优惠券具体信息。---不稳定 弃用
2.服务端稳定性，服务端集成topshelf 进行服务注册。防止服务进程死菜。--ko
3. 服务端必须编译为64位，否则会出现并行唤醒失败--是httpclient 的 timeout的设置  低于调试时间导致
4. 将淘宝web端，加密sign算法js函数，提取到配置文件，从配置文件加载----ko

--------libcef是多进程 每开启进程 我们随机分配各端口号，然后发送端口号到总控，在接收请求的时候 根据负载 转发到不同的进程去
伪集群 + 负载均衡----------  ko

来自微软的功能比较：
https://www.visualstudio.com/zh-hans/team-services/compare-features/

5. 前段各平台解析检索网页，解析为有效列表
6.数据绑定到前段网页，绑定处罚事件
7.实现js事件交互处理，分页，点击获取优惠券列表
8.用户登录注册
9.


--将登陆cookie  加密  发送到redis 服务器上，服务器上定时从指定的键 中读取对应的cookie集合，键值---domain-cookiename :value,将当期域名中的所有cookie
以列表json 存放


--桌面登陆器 可以支持现有的平台的登陆的cookie的获取，支持定时刷新，刷新完毕后，将cookie推送

--接收搜索关键词+支持的conditon 请求发送到server端 ，各个接口地址 接收请求 ，然后把拉取完毕的html 内容节点 发送到客户端
--页面解析内容json ，渲染html css js 内容(div 块中包含 平台图标 价格  成交/评论数  sku规格缩略图 链接 地区 店铺名 )



一个页面，一个搜索框
按照关键词 ，爬行到各个站点，检索价格信息 券信息。
这个券有点坑
1 阿里官方的券
2 合作平台的券
3 双方都有券，看谁的券更多

天猫
淘宝 隐藏的券 https://taoquan.taobao.com/coupon/unify_apply.htm?sellerId=2080087434&activityId=d65f436b9d6547eebb5fede8ef1d9c7b
京东 这种有优惠券的，需要提示优惠券-优惠后金额 https://a.jd.com/coupons.html?
拼多多  http://apiv3.yangkeduo.com/search?q=%E6%89%8B%E8%A1%A8&requery=0&page=1&size=20&pdduid=
http://mobile.yangkeduo.com/goods2.html?goods_id=7384216&refer_share_channel=message&from=groupmessage&page_id=goods_detail_1498702363618_MEidItnteY&is_back=1

唯品会----https://m.vip.com/    ------移动端有搜索！！！！！！！！！！
https://m.vip.com/searchlist.html?q=%E8%8B%B9%E6%9E%9C&channel_id=

苏宁易购
国美在线
当当 --多麦
一号店
美丽说
蘑菇街
折800

贝贝网


一淘也算

---------卷皮  惠品折 原来是券站....


淘宝 天猫 京东 是固定的展位，其他的展位用户可以自己排列 显示或者隐藏，写入到cookie

注意：一淘网价格比较水，将它检索后，扔到对应的淘宝或者天猫中。提示图 来自一淘，需要登录到一淘去。。。。
淘宝有优惠券  -明券 
还有暗券 ，分布在其他的合作的返利类型网站上，抓取分析下。

竖向排列，优惠价格排序  ，销量排序  ，上架时间，综合排序
优先展示推广价格高的 和 成交量高的  无成交量的 收缩起来 往后排

使用opencv 对商品的缩略图进行对比，分组到一起，我们采用 hash 方式 获取图形的hash码  然后

PSNR峰值信噪比
感知哈希算法
计算特征点 OpenCV图像相似度ORB算法（图像特征比对）
OpenCV图像质量评价的SSIM算法（图像相似度


此商品已下架
此商品已下架
在最终跟 一淘对比的时候  胜出的商品的title  搜索一淘 ，使用标题 可以大大降低关键词的重复性




第二期
跟单宝+乐乐豆

第三期 
商户合作 + 竞标推送（推送到注册商家--认证资质，投标竞价）

第四期
会员公益



一个买家可以持有全网卖家的优惠券的总数量是500张，但持有的同一个卖家的有效的优惠券的总数量不超过10张，
包括店铺券、商品券、包邮券。就算卖家设置了领取数量不限，买家同一种券也只能最多领取10张。
因此如果卖家发放过多，买家也无法收到，优惠券过期或已被使用，买家就可以再次领取



1  智能导购-------根据用户的实际购买产品分类-或者产品（大衣） 等 按照 当前  显示中优秀导购员的销售习惯 用户的习惯 进行推荐匹配
  ---------这个功能需要搜集用户的数据 ，根据注册手机号，检索用户 3年 在各个平台上的下单情况，查询用户的购买物品清单，
  根据用户 不同季节 交易的物品 对比平台上的同类产品 ，对比价格 -顾客的收入情况分析
  对比评论-顾客对好评关注度的分析
  对比sku- 尺码 口味 颜色 偏好 
  对比用户在社交网站上残留的信息进行跟踪 
  根据以上报告 ，测试用户的偏好信息  年龄  性格 家庭成员组成（交互游戏 测试用户性格-北森测试？？），根据这些心理信息  开展精确导购。
    1-1 订单  用户在电商平台的订单数据，1 是需要平台提供 接口API  目前困难较大，平台不开放 2 如果用户在打开浏览器的时候 判断是否登录过，如果登录过 ，那么操作浏览器  ，后台搜集订单数据
	1-2 基本信息 年龄 工作情况 学历信息 由用户填写，用户填写的准确性，开展招聘网站的人员信息登记，与其他招聘网站合作，建立人员信息登记
	1-3 开发交互式的测评程序 ，趣味测评，北森的在线测试类似，对人员的基本信息进行测试
	1-4 领奖需要实名，身份证 手机号 个人手持身份证照片
	 1-5？？？？ 人脸识别服务，根据人脸识别用户，反馈用户报告信息给线下合作商家，线下真人销售导购员获取用户的偏好信息？？风险较大 涉及用户隐私，保留对外设计。
	 
	 
	
 基础服务组件
 1 淘宝 京东 天猫 等 电商平台的  商品 价格信息 规格信息进行索引爬行。对同平台进行竖向 比较，对不同平台进行横向比较服务。根据商品货号 标题 进行匹配。  提供价格曲线信息，查询不到的，请求惠惠购物 ，购物党等比价工具的接口查询数据
 2 联盟平台的 推广API 进行集成，根据 标题、链接、关键词进行商品检索
    2-1 检索商品是否有推广，没有推广的不显示，推广商品的价格 ，返豆数目，优惠券信息，价格波动信息，推荐指数（同类交易量  好评比例 价格波动信息 用户偏好信息（权重低））显示
	2-2 如果没有API  那么需要检索网页 爬行网页信息，获取上述关键信息。
  
开发数据流量同步工具
定时登录工具 抓取  各个平台的点击率  和估计收入情况。同步到平台。
这个数据不能时时，平台也不是时时的，而且抓网页的形式 ，容易被T ，所以 ，网页显示前几日的数据即可！！也是基于 web 控件的形式，登录完毕就直接跳转到数据报表页面，解析页面即可。

  
  
2   --------用户自定义购物-------------
类似搜索引擎 检索用户输入的标题，按照相关度 进行智能检索
 2-1 检索天猫 列表  淘宝列表  京东列表，列表内容参考基础服务2
 2-2 对列表项 展示标题 价格 优惠券  适合度 30天销量 ，评论星级 ，搜索指数热度，价格指数变动信息（7天内 30天 月线），
 对于短时间价格浮动大的 提示警告  对于差评多于好评的进行风险提示
 
 
 
3 用户 选择完毕 点击进入详细页面
点击商品item ->详细监测 客户端工具是否可以被监测到，如果不能 那么提示用户下载安装跟单宝工具、
跟单宝监测用户登录
1 未注册账号，自动分配一个匿名账户，匿名账户可以把返回的点券豆豆  转给 其他的账户。自动分配的账户，弹出账户信息给用户。
提示用户保存下来。如果不保存，下次还可以看。一旦切换账号，那么就会把当前自动生成的账号擦出掉。这个提示用户，用户自己放弃，那就放弃了......

2 已经注册的，根据链接信息，弹出指定平台的登录窗口，如果已经登录过平台，那么不需要登录，
直接跟踪监视用户首页订单，按照 商品标题 检索订单，在当前时间段（前后20分钟）， ---注意：商品标题检索不出来的，按照当天的订单查询
，当日订单集合，扫描过滤。并记录下商品订单的订单号，防止下次重复！
跟单工具 定时刷新监测订单，频率不能太频繁，容易被拉黑。一旦登录失效，那么弹出登录窗口，提示登录已经过期，请从新登录。但是如果是进入win 服务，那么不弹出。



-------------****************由于浏览器安全限制 无法跨域爬行信息，开发订单同步工具，用户自行同步订单*******----------------
淘宝的Oauth 2.0 
https://login.taobao.com/member/login.jhtml?sub=true&style=mini_top&need_sign=top&TPL_redirect_url=https://buyertrade.taobao.com/trade/itemlist/list_bought_items.htm

京东登录
https://plogin.m.jd.com/user/login.action?appid=100&kpkey=&returnurl=https%3A%2F%2Fm.jd.com%3Findexloc%3D1%26sid%3D9afeaa881735ddf80f988548dd5015a2

进入详细模式后，发送本地监听端口是否开启 
监测是否开启了安全工具，参考百度云盘通信模式。


端口用来接受数据标识，提示用户跟单安全模式，一旦受到消息，验证用户是否登录，用户没有登录 那么弹出窗口，让用户登录。
这个登录是购物平台的登录，本系统不用登录，js 将用户登录的token 传递过去，自动得知当前是哪个用户请求

用户登录后，进入指定平台的订单页面，监测是否提交成功。如果不使用跟单工具 那么无法实时获取订单信息，丢单 。

恶意刷单--------跟单工具 如果检测到用户 ，在提交订单后，未付款，那么提示用户需要付款，但是记录下订单信息，如果一直未付款，那么豆芽不能成长。
杀死追单工具，并且退单的，降低用户信用等级。低于60分的，以后抽奖权重为极小值。

跟单工具：winform +owin （端口）+signalR +内置的web控件即可!客户端运行后，开启监听端口。开端口会引起杀毒程序报警，给主程序 exe  添加数字签名！！！
xilium-CEF3.2623.1397+Chromium49.0.2623.110


--------web控件  还是需要使用 google的 ，微软的太性能不好兼容差。。在不同的操作系统上 要么卡顿 要么崩溃 要么脚本错误...........
并设置win服务，动态传递cookie 后台刷新请求，防止被T，监听当天的订单情况。并在客户端下载用户订单其他页面数据。



注意：其实 同步的订单信息，并不能作为参考标准，因为是否转化成果，取决于联盟平台，那么这个同步过来的订单 其实只是一个参考，最终以平台仲裁为准！！！
（尝试请求平台需要登录的地址接口 ，  验证用户是否登录，使用基于iframe 解析url的方式。由于平台通信接口 比如API不开放 那么尝试隐藏的页面的方式 打开）
3-1 爬行用户订单信息 ，物品清单， 订单号 ，订单状态，下单日期，，成交日期，交易数目， 交易金额，货品id  ，标题，价格
3-2 爬行 订单物流信息  ，如果交易成功，那么获取 运单号 ，物流公司，卖家信息，发货地址，收货地址，邮编，手机号（手机号 可以是密文，密文对比当前用户的手机号是否模式匹配，匹配就替换），收货人，匹配是否成功
买家信息
卖家信息
订单交易信息
物流信息



3-3 用户如果没有登录  那么提示  价格 券价格  乐乐豆数目增加量，让用户确认是否注册

3-4 用户已经登录 那么 直接自动领券  （有券的话） 否则进入详细页面

上述全程监控用户点击 行为信息，搜索关键词，停留时间，鼠标点击热点区域，价格查看信息（日线 月线 全部的比较），
点击进入商品详细，这个过程在 上面的步骤，有一个蒙层弹窗，已经登录 那么自动关闭弹窗，否则弹出提示，在弹窗提交信息，提交的信息用来记录用户的行为，做行为分析。


3-5 跳转后，用户提交订单后 ，
1 自动抓取订单 （请求用户订单列表页 iframe ，记录最新的未付款或者已经付款未收货订单）
2  允许手工订单号，监控是否来自导购 是否未进库。。
3 监控订单状态  当日提交 1豆  付款 2豆   第二日 3豆  第三日 4豆 第五日 5豆  
依次增加 10个自然日后，豆豆成为金钱树，只要有豆 就可以参与抽奖 ，奖池里的金额，但是一旦抽奖 那么豆将会减去

各个平台，佣金结算规则不一样，单一平台，肯定无法将奖金池的水蓄满，所以必须多个平台，淘宝，京东，为主，当当 唯品会 等 有推广的电商平台。
将收入来源逐步扩大，用来规避  单一结算导致的资金紧张。



订单状态  当日提交 1豆  付款 2豆   第二日 3豆  第三日 4豆 第五日 5豆  
说明：根据返利情况，给用户不同额度的豆豆，但是豆豆有成熟期
1阶段 是豆芽儿 1
2 阶段 豆苗 2天
3阶段 豆开花 2天
4 阶段 毛豆 2 天
5 阶段 成熟 2天 -收割入仓

每个阶段的权重不一样，越向后，权重越高，中奖几率越高。
豆豆的权重
豆豆的数目
用户的信用
用户的中奖频率 （这个是减操作，不能让频率过高的用户，频率降权）


豆芽 直接进入区域块，一个豆芽占用一个坑。一个豆芽可以长出1枚金豆。1枚金豆就是一块钱

用户可以将自己的任意阶段的豆，转送给另外人。所有的豆，都是用户购物，返过来的豆分，平台不提供充值。！！！！！
---******注意***********
http://club.alimama.com/read-htm-tid-3463505-fpage-3.html?spm=a3b01.7696779.1998506161.295.I7Di33
根据淘宝规则，不允许直接 或者间接的形式  返利给用户现金折算。
那么我们也规定 豆豆不允许直接折现。但是有豆豆，就可以抽大奖。官方派彩的形式，派给用户。既能刺激 娱乐 博弈，又能绕过返现的模式！
如何理解“直接或间接返现金给会员或者买家”？
解读：
直接返现金给会员或者买家：直接以返现金的模式给会员现金返利；
间接返现金给会员或者买家：通过购物兑换积分（或者其他虚拟币），然后积分（或者其他虚拟币）直接兑换现金等类似的返利模式以上两种形式联盟都是不支持的。
4.什么是间接返现金包括哪些类型？.
间接返现金的有哪些类型（包括但不限于）：积分提现、虚拟币提现、积分兑换支付宝现金等；
例如：会员购物返积分，积分可以直接兑换成现金，通过银行卡支付宝等形式返给用户。



以上是金币流入

--------------返利佣金计入奖金池---------------
玩游戏，赢金币，金币折现

会员用户 参与奖金池的分成
这个需要调研多种博弈游戏的玩法。如何整合到线上

0 六合彩x
但在信息较为闭塞的乡村，中奖的方式比较玄妙，买彩票时，
码民下注，中奖号码是写单人通知码民并公之于众的，没有人知道中奖号码是怎么产生的，
但几乎也没有人去怀疑号码产生的公正性，大家只关心自己是否中了奖。


2 快3 ko，中奖号码为江苏快三，奖励为 猜中 奖励2金豆，快三设立快三奖金池  ，一旦消耗池的7.5成，或到游戏结束（设定一定的游戏时间段）游戏结束进入下周再开始。

3 老虎机 ko 摇奖---水果连连抽 动物。点击停止，发送停止指令到server  跟转盘差不多。。

4  幸运转抽奖；ko 将用户参与到一个比例盘，用户可以下注到指定的盘，摇奖3方阶段提交证明的方式。比例按照用户下的金豆的数目 豆的权重  等 算占百分比，并随机分布。
每个用户都是自己玩自己的，转盘分1 等  2 等 3 等， 让用户自己点击停止。我们提供随机的转动值。指针也随机动。用户点击停止的时候，服务器端接受立即停止的指令，将
server 上的镜像  数据 算好，映射到客户端。
自身提供1个随机数字--正向转动，由用户参与者的hash 字符串 产生碰撞数字-反向转动，由上证A  A股指数 开盘数字  收盘数字的 产生的两个数abs（取出差值）做第三个幸运数-正向转动
在下午3点，收集好的数字 ，从服务端开始运行游戏产生抽奖颜色。对投注的hash 进行奖励，对跟注的进行奖励


5 随机红包抽；ko  用户点击网页图像或者手下滑的速度 拉取红包。。多空包 多小包，中宝  中大  大包一次递减。本次小奖池金额的9成

从  2  3 4 5  依次周一 到周四，周五 阳光普照 ，参与会员均分。
周六 周日。随机从上面的几个游戏选择一个，进行。


后续算法待研究........................................
6 斗地主
7 德州扑克
8 斗鸡 蟋蟀  
9 猜骰子
10 猜球赛
11 麻将
12 拖拉机 -扑克牌
https://www.le989.com/index.html#/home



--------*********小奖金模式**********---按照 当天完成收货订单额度的 75%  额度 成了当天小金库***********
1 会员可以讲手中的豆豆-金豆（1对1 等额人民币）的形式 换算 提取，7日后的成交额度
2 引入竞彩模式 将豆豆-金豆 ，进入彩金池。彩票   博弈行为的萃取，提炼相关玩法模式。用户与用户对赌  用户与平台对赌。
  2-1 周一 转盘抽 ；
  周三  下注抽，投资对赌
  周五 随机幸运滑动，90秒 点击滑动 ，随机产生红包模式。90秒后算一次。还想抽，那么投入一定数量的豆豆-钻石后，继续抽。每天抽N<5次，分布在不同时间点。
  
  这个过程是金币流出
  
  在流入 跟流出之间，1 平台抽取一定额度的成本服务费用 2 平台也在抽奖中的高级用户（对于用户  这个相当于不中奖 空白板）
  
  ---------********大奖金模式----*按照奖金池的累积额度 进行定向的月度抽奖 额年度抽奖*******月度 按照当月的  ，年度 按照当年的80% 成立金库************
  
  抽奖玩法 还是上面的 3种 ，分布在当天的不同时间点。每个玩法只能参加一次。
  
  大奖领取 ，1 实名 2 录视频 3分享视频 视频的形式 后续完善
  
  小奖金模式仅仅提供 老虎机随机抽取，玩一把  多少豆
  
  ---------豆豆折现----------------
  用户账户的豆豆  可以转换成等额额现金。进行实名认证后，可以提交  折现申请。
  50元 以下直接走转账
  超过50的 审核 次日到账。
  
  （由于用户提取的金额 总数，一定是小于平台佣金额度，所以池子的额度不是问题。要进行估算，分配奖金池的额度上限问题）
  由于平台限制
  http://club.alimama.com/read-htm-tid-3463505-fpage-3.html?spm=a3b01.7696779.1998506161.58.0aKkMe
  http://rule.alimama.com/?spm=a3b01.7696779.1998506161.84.0aKkMe#!/announce/business/detail?id=8307063&knowledgeid=20327010
  不允许直接返现的形式，那么采用  赠予资质用户等额的物品。用户如果不要物品，可以采取二手卖掉的形式，与平台进行交易。收取交易形势原则费用1元。
  进行折现
  
  -------商家模式-------------
  商家报产品，提升产品检索排名---------后续模式
  --------公益------------------------后后续模式
  按照奖金池 
  1 会员申请 大病困难 补助
  2 年度的社区 ，边远地区的公益  捐助活动
  ----------------------------
  
----检索版本-次版本 号回出来对应的历史文件收录信息-----------
  
cef_binary_3.2623.1401.gb90a3be
这个资源现在很难搜索到 分享给大家
http://www.ceffans.com/forum.php?mod=viewthread&tid=9
http://pan.baidu.com/share/home?uk=2323313709




cef_binary_3.2623.1401.gb90a3be_windows32.7z  http://pan.baidu.com/s/1eSwVuZC  Chromium 49
cef_binary_3.2623.1401.gb90a3be_windows64.7z  http://pan.baidu.com/s/1sk9PR3J  Chromium 49
cef_binary_3.2704.1434.gec3e9ed_windows32.7z  http://pan.baidu.com/s/1eRJFJ3c  Chromium 51
cef_binary_3.2704.1434.gec3e9ed_windows64.7z  http://pan.baidu.com/s/1jI5AEVG  Chromium 51
cef_binary_3.2171.2069_windows32.7z           http://pan.baidu.com/s/1nvtYYQP  Chromium 39
  
  
if not exist $(TargetDir)libcef.dll xcopy /s/e $(SolutionDir)CEF\$(PlatformName)\*.* $(TargetDir)
  
网游抽奖禁而不止 押宝到底算不算赌博行为？
http://www.techweb.com.cn/internet/2015-04-28/2146561.shtml
在网游中只要不用法定货币去押宝，就不是赌博行为？记者21日从“广东民声热线”了解到，
采取游戏币进行抽奖的环节没有问题，但若是用虚拟货币来抽签、押宝就涉嫌违法了。
“开箱子抽奖”等的诱导手段早在几年前就已被国家明令禁止。
网游抽奖禁而不止 押宝到底算不算赌博行为？
“开箱子抽奖”是指某些网游产品利用虚拟货币，采取抽签、押宝、随机抽取等博彩方式，分配网游道具或虚拟货币。媒体记者调查发现，
“开箱子抽奖”等在网络游戏中仍普遍存在，网游抽奖禁而不止，某些知名互联网公司也牵涉其中。
如何认定网游中存在的赌博行为？省文化市场综合执法局副局长杨健表示，认定有一个关键点，网络虚拟货币是存在于游戏之外的，通过法定货币，以一定的比例来兑换。
“什么是虚拟货币？什么是游戏币？简单区分就是虚拟货币是游戏公司发行的由人民币兑换的一个凭证。
”中国青少年绿色网络建设传播联盟常务副秘书长明宗峰表示，游戏币是玩家在游戏里面通过自己的劳动获得，
所以游戏币和虚拟货币是完全不同的概念。如果是用游戏币抽奖就没有问题，如果是用虚拟货币就涉嫌违法了。
省文化厅厅长方健宏指出，无论是处罚的数量还是查处的手段，有不少人都认为处理偏轻，但是目前文化部门的处理都是根据相关的法律法规来办的。
不管相关行为属于什么公司，都应该加强监管，下一步会继续加大处罚力度。

  
  《中华人民共和国刑法》第三百零三条规定：以营利为目的，聚众赌博或者以赌博为业的，处三年以下有期徒刑、
  拘役或者管制，并处罚金。开设赌场的，处三年以下有期徒刑、拘役或者管制，并处罚金；
  情节严重的，处三年以上十年以下有期徒刑，并处罚金。
  
  关于网站的文案的改写，包括标题，描述，关键词么，是否只要出现返利，返现就不可以？不属于淘宝的返利范围（例如拍拍返利）是否可以出现该类字样并返现金？
本次公告，只对于出现“现金”返利字样，同时仅限于对淘宝及天猫商家的现金，
外部与联盟合作的返利站与其它B2C合作，是否返现金，不收本公告限制


Shopback则表示，今年1月至今共发出120万元分红给用户，个人用户的“最高记录”是半年内领取3200元。

每天平均一人  图骗‘回赠金’

业者表示，每天平均有一人尝试骗“回赠金”，常用伎俩包括假装大手笔消费，最后一分钟再取消订单。

周稼裕透露，曾有一名男子网购价值18万元的物品，按10％回赠率，原本可赚取1万8000元的回赠金。

不过，这名买家在货物未运抵之前，最后一分钟取消订单，希望能在没有还钱的情况下，赚取回赠金，但最后没有成功。

有鉴于此，一般提供现金回赠的购物网站都有防范措施。比方说，电子钱包里的回赠金，必须要在商家通过交易（介于45天至60天）后，才能转账到银行户头。

周稼裕说，这类尝试“走漏洞”的用户，平均每天有一人。

网购赚回赠金  应该注意什么？

-货比三家，查询店家直接促销是否更划算

新加坡理工学院零售和市场行销高级讲师陈建安受访时说，消费者除了注意第三方网站提供的回赠率，也应该直接到商家网站或店面，查询店家是否有自家的促销或折扣，说不定比通过“中介”领取现金回赠来得划算。

-确保网购公司信誉良好，妥善处理转账事宜

陈建安说，信用卡现金回赠是银行与用户之间的交易。相比之下，网购现金回赠由第三方“中间人”将现金从商家手中转到用户银行户头。消费者应确保只在有良好信誉的网站交易。

-结合其他回赠和促销

周稼裕说，消费者不应只局限于第三方网站的现金回赠。一个精明的做法是，利用提供现金回赠的信用卡，
通过第三方网站赚取另一轮现金回赠。有些商家也会在网上给予额外回扣，最理想状态是赚取“三重优惠”。


通过返现网取得购物返现的操作方式并不复杂，例如在五七折网，无需注册，步骤简单，返利所得不需经过第三方账户，
直接归入购物者的支付宝账户，让购物者得到最大程度的利益


赠与合同（contract of gift），赠与人把自己的财产无偿地送给受赠人，受赠人同意接受的合同。赠与合同可以发生在个人对国家机关、
企事业单位和社会团体以及个人相互之间。赠与的财产不限于所有权的移转，如抵押权、地役权的设定，均可作为赠与的标的。
赠与合同一般具有以下性质：
①双方行为。赠与合同须当事人双方意思表示一致才能成立，如果赠与人有赠与的表示，但受赠人并没有接受的意思，则合同仍不能成立，
故与馈赠这种单方行为不同。
②是吸收了诺诚合同与实践合同的合理因素。诺成行为。多数国家承袭罗马法的传统，规定赠与合同在当事人双方意思表示一致时即告成立，
不必等待交付赠与物，即为诺成行为。
③无偿行为。除合同中双方约定附条件的义务外，原则上受赠人并不因赠与合同而承担义务，故为单务合同


  刑法第三百零三条规定：“以营利为目的，聚众赌博、开设赌场或者以赌博为业的，处3年以下有期徒刑、拘役或者管制，并处罚金。”

  具体的解释就不多说了，主要说说你问的赌博的界定，主要从赌博和正常娱乐以及诈骗行为这两方面易于混淆的情形谈：



一、赌博和正常娱乐活动的界线

  属于正常娱乐活动还是赌博可以从以下八个方面界定：

  一是父母、兄弟、姐妹等亲属之间带有彩头的娱乐活动，无论彩头多少不以赌博论处。

  二是同事、朋友、邻居间的娱乐活动，要视多方面情况综合确定属不属于赌博。

  三是从输赢额总数上明确划分赌博和正常娱乐活动的界线。

  四是从每注赌资的多少划分赌博和正常娱乐活动的界线。

  五是所携带钱款算不算赌资，将根据输赢总额和每注赌资的多少来界定。

  六是对春节、元旦等重大传统节日期间群众带彩头活动进行定性。

  七是老年人的带彩头娱乐活动不视为赌博。

  八是在酒店、桑拿、宾馆等公共场所带彩头的娱乐活动，将视为赌博予以查处。 



二、赌博和诈骗行为的区分和界定   

   在实际生活中，赌博行为与欺诈行为经常是交织在一起的。特别是对圈套型赌博罪与赌博型诈骗罪来说，两者存在着许多共同之处，如都包含有欺诈的内容，
   又都有赌博行为的内容。要对两罪作一个明确的区分，可以从两罪中的欺诈内容、欺诈时间以及欺诈目的等几个方面来入手： 

   1.首先，从所实施的欺诈内容来看，圈套型赌博罪中的欺诈是采取虚构事实、隐瞒真相的方法，诱使被害人参加赌博。当被害人同意参赌后，欺诈内容即已实现，
   欺诈行为即告结束，此后受骗者处分其财物并没有受到欺诈。而赌博型诈骗罪中的欺诈则必须使受骗者产生错误而导致其实施处分财物。
   实践中，圈套型赌博罪中的欺诈行为主要表现为，若干行为人相互勾结、有预谋地在大庭广众之下进行赌博表演，其中一人故意输给另一人数量可观的钱财，
   以此给围观者造成错误认识，并鼓动、挑逗围观者下注参赌，从而使被害人自觉地钻进行为人设置的圈套参与赌博。而赌博型诈骗罪中的欺诈行为除了上述表现形式外，
   主要还表现为行为人事前串通、有意识地排定各人座次、牌序、使用假骰子、中途换牌等，使被害人误以为自己“运气不好”而把自己的钱财当做赌资输给行为人。 

   2.其次，从实施欺诈的时间范围来看，圈套型赌博罪中的欺诈，停止于被害人同意参赌之时，在此后的行为中就不再有欺诈的行为。
   而赌博型诈骗罪中的欺诈虽然也可能存在于被害人同意参赌之前，但它必须要延续到赌博行为进行的过程中。也就是说，在赌博型诈骗罪中，
   行为人不但可以在诱赌过程中采取了欺诈手段，而且必须是在赌博的过程中采取了欺诈手段。当然，这里的欺诈只需存在于赌博行为中的某一点或某一段时间上即可
   ，无须存在于整个持续过程中。由此可见，根据欺诈行为的存续或结束时间就可以轻易地把圈套型赌博罪与赌博型诈骗罪区分开来。
   举个例子来说，某一行为人在赌博前采取种种欺诈性手段，挑逗、鼓动被害人下注，待被害人同意参赌后，
   如果双方都按事先约定的或约定俗成的赌博规则进行赌博，则行为人构成圈套型赌博罪；如果行为人在开赌后又采取各种欺诈手段，
   暗中操纵赌博结果，则应构成赌博型诈骗罪。 

    3.最后，从实施欺诈行为所欲达到的目的来看，圈套型赌博罪的目的一是诱使他人参赌，二是在他人参赌后，凭个人的运气和牌技，
	进行营利活动。可以说，这时的赌博输赢结果是偶然的，其几率是相等的。这种输赢结果是行为人所无法控制的，也是行为人所不愿控制的。
	而赌博型诈骗罪中的目的是非法占有他人财物，并通过“有赢无输”的赌博行为来达到此目的。从这个角度来讲，
	行为人在赌博过程中，弄虚作假、暗中串通、有意识地实施欺诈手段，实际上就是操纵了赌博输赢的结果，
	使得赌博结果对被害人而言只有输、没有赢，从而顺利地占有了他人的财物。很明显，这种行为虽然有赌博因素的介入，
	但究其本质，仍然是一种以赌博为工具而实施的诈骗行为。可以这样说，在赌博型诈骗罪中，
	行为人实施赌博行为的目的就是骗取他人财物，而不是为了赌博营利而赌博。这是一种以赌博为名、
	行诈骗之实的行为。据此，我们可以从行为人是为赌博而赌博还是为非法占有他人财物而赌博这一点上把两罪区分开来。 
	

　淘宝客优惠券哪里来的?最近淘宝联盟推出新产品“专享优惠券”列页表，能够帮消费者筛选出热销商品，这让淘宝客推广多了一个引流的方法，那么淘宝客优惠券怎么获得的?
http://www.kaitao.cn/article/20161226150845.htm

　　1.什么是“专享优惠券”列表页?

　　“专享优惠券”列表页是优质的单品+券商品集合页。通过精准算法筛选出淘宝天猫“最”热销的单品+券商品，构成一个“超级优惠”清单，降低消费者决策成本，提升页面转化率。

　　页面如下所示：

　　淘宝客优惠券哪里来的

　　2.“专享优惠券”列表页的优势

　　(1)链路优化，提升转化：无线端的导购landing页面支持唤起手机淘宝，实现免登陆。缩短消费者操作路径，提升用户体验，提高转化率。

　　(2)算法排序，优质保障：“专享优惠券”列表页基于大数据计算和推送优质商品，排序靠前的商品吸引力更大;每日商品排序都会重新计算调整;购物券用光等情况会及时更换商品。

　　(3)重点关注“媒体收益”：“专享购物券”列表页中，宝贝越好，收益越高，排位越前;此外，“专享优惠券”绝大多数商品都为鹊桥商品，对于参加了鹊桥的商品，优先取鹊桥高佣。

　　3. 页面说明：

　　淘宝客优惠券是从哪里来的

　　“专享优惠券”页面总共有11个频道：

　　综合、家居家装、数码家电、母婴、食品、女装、鞋包配饰、美妆个护、男装、内衣、运动户外。

　　商品：

　　每个频道最多展现100个商品，每个商品都有对应的优惠券。

　　购物流程：

　　消费者点击商品-直达商品详情页;点击优惠券-先领券，3-5秒直接跳转商品详情页。

　　4.结算规则：

　　a) 当消费者完成“领券”、“去详情页查看商品”的操作后，该消费者链路被种上该淘客的跟踪;

　　b) 媒体获得消费者购买商品产生的佣金(跟踪结算仍为正常的CPS模式);

　　c)“专享优惠券”列表页大多商品都是鹊桥商品，结算佣金逻辑如下

　　淘宝客优惠券怎么获取的

　　5.“专享优惠券”列表页如何获取?

　　a)登录pub.alimama.com，进入媒体后台-联盟产品-官方活动推广-爱淘宝-专享优惠券-点击立即推广(如下图所示)

　　淘宝客优惠券是怎么获得的

　　b)设置推广单元

　　淘宝客优惠券如何获得的

　　c)取链接，有四种形式的链接可选择

　　怎么获得淘宝客优惠券

　　d)将链接投放到相应的推广位

　　6.部分参数配置：完成取链接后，有两个参数可以自主配置

　　a)媒体可根据需要，配置消费者打开页面时首先看到的频道。

　　添加&channel=X：频道的标识，取值范围从0-10(顺序如综合、家居家装、数码家电、母婴、食品、女装、鞋包配饰、美妆个护、男装、内衣、运动户外)。

　　b)媒体可选择用户打开此页面是否唤醒手机淘宝。

　　nowake：关闭唤醒的标识，当拼接&nowake=1时，不唤起手淘;否则将自动唤醒手淘。

　　示例：

　　正常链接，默认消费者首次打开先看到“综合”频道，且唤醒手机淘宝

　　https://uland.taobao.com/coupon/elist?pid=mm_xx_xxx_xxxx

　　配置消费者首次打开先看到“母婴”频道，且唤醒手机淘宝

　　https://uland.taobao.com/coupon/elist?pid=mm_xx_xxx_xxxx&channel=3

　　配置消费者首次打开先看到“母婴”频道，且不唤醒手机淘宝

　　https://uland.taobao.com/coupon/elist?pid=mm_xx_xxx_xxxx&channel=3&nowake=1

　　以上就是淘宝客优惠券怎么获得的全部内容，希望能帮助到大家!


https://help.alimama.com/?spm=a219t.7900221/11.1998910419.4.Nf8ny1#!/u/faq/detail?id=20333365
关键词搜索优惠券服务，是否可以搜索到自己的搭建的网页上？

目前阿里妈妈还未提供官方的优惠券搜索服务功能，因此淘宝客可以在自己的网页上提供关键词进行搜索优惠券服务。
因为这几个接口已经不开放权限，新的开发者没办法调用它了，之前申请通过的，还能继续调用
http://www.jianshu.com/p/d711976b8903?winzoom=1
倒数第四个、第五个是和优惠券相关得，因此只要使用 taobao.tbk.item.coupon.get和 taobao.tbk.itemid.coupon.get
淘宝客基础API恰恰缺少有优惠券有关的API，大部分开发者的权限应该都是基础API，权限不够，
无法实现淘宝客网站自动获取淘宝专享优惠券的功能，那么网上那么多淘宝客网站提供的专享优惠券是怎么实现的？ 
两个淘宝客API即可实现淘宝客网站自动获取专享优惠券的功能。


如果买家要某一个商品，发一个宝贝链接给我，我不能发送转换淘口令、转化链接给买家了吗？
答：如果前提是买家发送宝贝链接，淘宝客返回淘口令、淘宝客推广链接这种形式目前是不可以的。
6、买家发给淘宝客宝贝标题，淘宝客再生成一个推广链接给淘宝客，是否可以？
因为链接中可能包含其他淘宝客的推广参数------------------

优惠券相关...........
http://www.quanquanso.com/
https://uland.taobao.com/new_cat.htm
https://uland.taobao.com/coupon/elist
https://uland.taobao.com/coupon/edetail?e=pULBr1y4%2BeYN%2BoQUE6FNzCGlwGhEjJFdJksV7FGzX0K23L6MuSOxGoRhKpS6vJVMvH26sk7mqsGqkpE8V4umlhpywujSvOp2nUIklpPPqYK6%2BiQUJWOLlVSoLVLK1eWBnzsiS22X1XdGQ91PXHel06GjDOzTzNOz&pid=mm_119533076_19702767_68040106&af=1

https://temai.m.taobao.com/new/index.htm?pid=mm_31965263_6978544_109994745
https://uland.taobao.com/coupon/list?pid=mm_31965263_6394774_21932422#channel=3

另外还有商家为了推广单品设置的单品不公开券，给特定的推广家。


优惠券-查询
https://uland.taobao.com/cp/pc_coupon_list?pid=mm_31965263_6394774_21932422&e=m%3D2%26s%3DTxMJy5%2ByV7scQipKwQzePOeEDrYVVa64K7Vc7tFgwiHjf2vlNIV67oHyYLQfmHW7Jdux29CqXYk0gkVGIth8kaXPTjhnp4ESePszmPR8eOjcfq4aE1PlKU4RUeMxOGNfrUQ3vcBW4sdBvVs6frrhpEgp26yBJUd9vRUaMqSjP0W1LHK2pUX%2F79ou2Kf9J7x8a5po3Nz19rwAQdgvw7Aklg%3D%3D&queryCount=20&page=4&pageSize=20&channel=couponlist_nanzhuang
返回的结果中有分享的优惠券地址

一淘的集分宝
1、首先有两个咸鱼号，一个用于出售一个用于购买。
2、发布一个商品和集分宝相当的。
3、用有集分宝的号购买商品，选择当面交易。
4、确认收货，然后秒到支付宝余额。
总结：这个方法比找别人和用淘宝买方便多了。

--------------返利多的  价格不真实，水分大，如果没有同款 那么还是返利合适------

docker 
Docker start/stop/restart 命令
 Docker 命令大全Docker 命令大全
docker start :启动一个或多少已经被停止的容器
docker stop :停止一个运行中的容器
docker restart :重启容器
语法
docker start [OPTIONS] CONTAINER [CONTAINER...]
docker stop [OPTIONS] CONTAINER [CONTAINER...]
docker restart [OPTIONS] CONTAINER [CONTAINER...]
实例
启动已被停止的容器myrunoob
docker start myrunoob
停止运行中的容器myrunoob
docker stop myrunoob
重启容器myrunoob
docker restart myrunoob

docker run --name redis-server -p 6379:6379 -d redis  --appendonly yes

启用客户端
 docker exec -it redis-server redis-cli
 

使用redis镜像
运行容器
runoob@runoob:~/redis$ docker run -p 6379:6379 -v $PWD/data:/data  -d redis:3.2 redis-server --appendonly yes
43f7a65ec7f8bd64eb1c5d82bc4fb60e5eb31915979c4e7821759aac3b62f330
runoob@runoob:~/redis$
命令说明：
-p 6379:6379 : 将容器的6379端口映射到主机的6379端口
-v $PWD/data:/data : 将主机中当前目录下的data挂载到容器的/data
redis-server --appendonly yes : 在容器执行redis-server启动命令，并打开redis持久化配置
查看容器启动情况
runoob@runoob:~/redis$ docker ps
CONTAINER ID   IMAGE        COMMAND                 ...   PORTS                      NAMES
43f7a65ec7f8   redis:3.2    "docker-entrypoint.sh"  ...   0.0.0.0:6379->6379/tcp     agitated_cray
连接、查看容器
使用redis镜像执行redis-cli命令连接到刚启动的容器,主机IP为172.17.0.1
runoob@runoob:~/redis$ docker exec -it 43f7a65ec7f8 redis-cli
172.17.0.1:6379> info
# Server
redis_version:3.2.0
redis_git_sha1:00000000
redis_git_dirty:0
redis_build_id:f449541256e7d446
redis_mode:standalone
os:Linux 4.2.0-16-generic x86_64
arch_bits:64
multiplexing_api:epoll
...


-------注册阿里云 镜像  ，开通专属镜像加速服务-------------
https://jplytq8f.mirror.aliyuncs.com

针对安装了Docker Toolbox的用户，您可以参考以下配置步骤：

创建一台安装有Docker环境的Linux虚拟机，指定机器名称为default，同时配置Docker加速器地址。

docker-machine create --engine-registry-mirror=https://jplytq8f.mirror.aliyuncs.com -d virtualbox default
查看机器的环境配置，并配置到本地，并通过Docker客户端访问Docker服务。

docker-machine env default
eval "$(docker-machine env default)"
docker info
针对安装了Docker for Windows的用户，您可以参考以下配置步骤：

在系统右下角托盘图标内右键菜单选择 Settings，打开配置窗口后左侧导航菜单选择 Docker Daemon。编辑窗口内的JSON串，填写加速器地址，如下所示：
{
  "registry-mirrors": ["https://jplytq8f.mirror.aliyuncs.com"]
}
编辑完成，点击 Apply 保存按钮，等待Docker重启并应用配置的镜像加速器。

注意

Docker for Windows 和 Docker Toolbox是不兼容，如果同时安装两者的话，需要使用hyperv的参数启动。
docker-machine create --engine-registry-mirror=https://jplytq8f.mirror.aliyuncs.com -d hyperv default
Docker for Windows 有两种运行模式，一种运行Windows相关容器，一种运行传统的Linux容器。同一时间只能选择一种模式运行。
相关文档

Docker学习笔记之top,inspect,exec,export命令
原创 2016年11月01日 11:37:12 标签：docker /top /inspect /exec /export 2431
PS：我的实验环境我是直接在root下所以命令都不需要进行sudo

查看容器进程

docker top可以查看运行容器中运行的进程 
一般用于查看后台型，交互型的需要到其他终端下查看 
首先创建一个后台型容器并处于始终睡眠 
docker run -d --name=daemon_top ubuntu /bin/bash -c 'while true;do sleep 1;done;' 
docker ps查看一下运行的容器 
docker top daemon_top将看到如下 
UID PID PPID C STIME TTY TIME CMD 
root 22858 22848 0 22:10 ? 00:00:00 /bin/bash -c while true;do sleep 1; done 
root 22915 22858 0 22:10 ? 00:00:00 sleep 1 
这里能看到两个进程while和sleep（这里我听说shell中的一条语句就是一个进程？？不知道是不是真的，下次可以试试？？？）

查看容器信息

docker inspect 容器名/容器ID可以查看容器的配置信息：容器名，环境变量， 运行命令， 主机配置，网络配置，数据卷配置。 
主要还是需要了解这些内容的细节。（这个接下来再具体了解。） 
-f或者–format格式化标识， 
查询容器的运行状态： 
docker inspect --format='{{.State.Running}}' 容器名 
查询容器的IP的地址 
docker inspect --format='{{.NetworkSettings.IPAddress}}' 容器名

容器内执行命令

我们通常可能会在一个正在运行的容器中启动另一个程序（并发启动）会用到docker exec命令 
执行命令可以创建交互型和后台型 
-d：后台型 
-it：标准输入和关联终端 
docker exec -d 容器名 touch /tmp/new_file 
这个命令就是要运行一个后台任务，在 
/tmp下创建一个名为new_file的文件 
docker exec -it 容器名 /bin/bash 
这个命令都可以用交互型和后台型容器。 
如果用于后台型容器就可以为后台型容器关联一个终端。 
（这里可以想想前台程序和后台程序的区别？？？？）

容器的导入和导出

docker export命令提供一种容器持久化的方式。我们在运行了容器后修改配置等等操作后，我们用docker export 命令将容器导出成文件，这样我们就可以进行分享。 
docker export 容器名 > 文件名 
导出后我们当然也可以将文件导入作为镜像 
cat 文件名 | docker import - 镜像名:标记 
import会将从标准输入 读取容器内容。 
import也可以从网络上导入容器 
docker import url res:tag(镜像名：标记) 
思考？？？ 
res:tag具体对应什么可以去找一个例子试试。

----docker 扩展linux 的命令集合----
docker pull docker.io/busybox
可以直接通过
docker run -ti busybox 进去操作，也可以按照如下笨方法创建容器并进去操作。

基于busybox镜像创建容器busyboxtest：


[root@niaoyun43442 yum.repos.d]# docker run  -dti  --name busyboxtest  docker.io/busybox  /bin/sh


然后就可以使用busybox 中的命令了
docker run busybox /bin/echo Hello Docker


1:使用docker attach命令
我们使用
 
docker attach db3 或者 docker attach d48b21a7e439
 

 
db3是后台容器的NAMES,d48b21a7e439是容器的进程ID  CONTAINER ID
然后就进去了这个容器的ssh界面。
但是它有一个缺点，只要这个连接终止，或者使用了exit命令，容器就会退出后台运行
 
 
2:使用docker exec命令
这个命令使用exit命令后，不会退出后台，一般使用这个命令，使用方法如下
 
docker exec -it db3 /bin/sh 或者 docker exec -it d48b21a7e439 /bin/sh
 

 
db3是后台容器的NAMES,d48b21a7e439是容器的进程ID  CONTAINER ID
 /bin/sh 是固定写法
它也能进入这个容器

--------------在docker 运行dotnet core 程序------------
https://hub.docker.com/r/microsoft/dotnet/

拉取官方镜像：
docker pull microsoft/dotnet

控制台程序测试
ocker run -it --rm microsoft/dotnet
[now in the container]
mkdir app
cd app
dotnet new console
ls
dotnet restore
dotnet run
dotnet bin/Debug/netcoreapp1.0/app.dll
dotnet publish -c Release -o out
dotnet out/app.dll
exit

asp.net mvc 程序测试
docker run -p 8000:80 -e "ASPNETCORE_URLS=http://+:80" -it --rm microsoft/dotnet
[now in the container]
mkdir app
cd app
dotnet new mvc
dotnet restore
dotnet run
exit
After running dotnet run in the container, browse to http://localhost:8000 in your host machine.

The experience is very similar using Windows Containers. The commands should be the same, with the exception of the docker run. Replace the docker run command above with the following two commands:

docker run -e "ASPNETCORE_URLS=http://+:80" -it --rm microsoft/dotnet
ipconfig
Copy the IP address from the output of ipconfig. After running dotnet run in the container, browse to that IP address in your browser on your host machine.

You should see a default ASP.NET Core site and logging activity in the container.
 
---------删除全部容器---powershell----
PowerShell is so much easier!

docker ps -aq | foreach {docker rm $_}
 @Samshal
Samshal commented 18 days ago •  edited 
And Powershell can be so much faster @jaywryan

docker rm $(docker ps -aq)


Tested on 1.12.3 (Windows and Linux (centos 7))

Linux

Containers

docker rm $(docker ps -a -q)

Images

docker rmi $(docker images -q)

Windows

Containers

FOR /f "tokens=*" %i IN ('docker ps -a -q') DO docker rm %i

Images

FOR /f "tokens=*" %i IN ('docker images -q -f "dangling=true"') DO docker rmi %i


